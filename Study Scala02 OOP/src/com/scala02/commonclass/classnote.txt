###1.class
class Counter {
  private var value = 0 // 必须初始化字段
  def increment() { value += 1 } // 方法默认公有
  def current = value // 调用必须是myCounter.current这种风格
}
class Student{  
  var age=20     
  //底层编译器会自动为公有的age添加get和set的公有方法,可以理解为伪public类型  
  private[this] var gender="male" 
  //private[this] 只有该类的this可以使用  
  private var name="clow" 
  //声明了private,底层编译器会自动为私有的name添加get和set的私有方法  
  //但是可以自己定义属性方法  
  def getName=this.name  
  def setName(value:String){this.name=value}  
}
Scala类和java类中有些区别，在Scala声明private变量会Scala编译器会自动
生成get,set,在Scala中变量是需要初始化的，如果不声明private默认是public的








###2.object
Scala中没有静态修饰符static，在object下的成员全部都是静态的，如果在类中
声明了与该类相同的名字的object则该object是该类的“半生对象”，可以理解把类中
的static集中放到了object对象中，伴生对象和类文件必须是同一个源文件，可以用
伴生对象做一些初始化的操作




###3.trait
在java中可以通过interface实现多重继承，在Scala中可以通过特征（trait）实现
多重继承，不过与java不同的是，它可以定义自己的属性和实现方法体，在没有自己的实现
方法体时可以认为它时java interface是等价的，在Scala中也是一般只能继承一个父
类，可以通过多个with进行多重继承。


